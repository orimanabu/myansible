---
- name: check that you can connect (GET) - returns a status 200
  action: uri url="https://{{ staypuft_deploy_ip }}"
  register: webpage

- name: login to the webpage and save cookie
  uri: url="https://{{ staypuft_deploy_ip }}/users/login"
       method=POST
       body="login[login]={{ staypuft.deploy.login.username }}&login[password]={{ staypuft.deploy.login.password }}"
       follow_redirects=safe
       HEADER_Content-Type="application/x-www-form-urlencoded"
       status_code=302
       return_content=yes
  register: login

- name: use get command to return authenticity_token
  uri: url="https://{{ staypuft_deploy_ip }}"
       method=GET
       HEADER_Cookie="{{login.set_cookie}}"
       status_code=200
       follow_redirects=safe
       return_content=yes
  register: get_output

- name: find the authenticity_token
  shell: >
     sed -n "s/&lt;meta content=&#34;\(.*\)&#34; name=&#34;csrf-token&#34; \/&gt;/\1/;t end;b;:end;p;q" <<<'{{ get_output.content|escape }}'
  register: token

- name: create a new deployment
  uri: url="https://{{ staypuft_deploy_ip }}/deployments/new"
       HEADER_Cookie="{{login.set_cookie}}"
       method=GET
  register: new_deployment

- name: get deployment id number
  shell: sed -n 's/https:\/\/{{ staypuft_deploy_ip }}\/deployments\/\(.*\)\/steps\/deployment_settings?/\1/p' <<<"{{ new_deployment.content_location }}"
  register: deployment_id

- name: add deployment settings
  uri: url="https://{{ staypuft_deploy_ip }}/deployments/{{ deployment_id.stdout }}/steps/deployment_settings"
       method=PUT
       HEADER_Cookie="{{login.set_cookie}}"
       HEADER_X-CSRF-Token="{{ token.stdout }}"
       HEADER_Content-Type="application/json"
       body='{"staypuft_deployment":{"name":"{{ staypuft.deploy.deployment_settings.name }}{{ 10000 |random }}","description":"{{ staypuft.deploy.deployment_settings.description }}","layout_name":"{{ staypuft.deploy.deployment_settings.layout_name }}","networking":"{{ staypuft.deploy.deployment_settings.networking }}","amqp_provider":"{{ staypuft.deploy.deployment_settings.amqp_provider }}","platform":"{{ staypuft.deploy.deployment_settings.platform }}","passwords":{"mode":"single","single_password":"{{ staypuft.deploy.deployment_settings.single_password }}","single_password_confirmation":"{{ staypuft.deploy.deployment_settings.single_password_confirmation }}"}}}'
       follow_redirects=safe
       status_code=302

## TODO: subnets on settings, as dict
#- name: network configuration - create subnets
#  shell: >
#    curl -k -X POST -H Cookie:"{{login.set_cookie}}" -H X-CSRF-Token:"{{ token.stdout }}" -H Content-Type:"application/x-www-form-urlencoded" --data 'staypuft_simple_subnet[name]={{ item.name }}&staypuft_simple_subnet[network_address]={{ item.address }}&staypuft_simple_subnet[dhcp_server]=external' https://{{staypuft_deploy_ip}}/staypuft/subnets?deployment_id={{ deployment_id.stdout}}
#  with_items:
#      - { name: "openstack_tenant",   address: "172.16.16.0/24" }
#
#- name: network configuration - create subnets no dhcp
#  shell: >
#      curl -k -X POST -H Cookie:"{{login.set_cookie}}" -H X-CSRF-Token:"{{ token.stdout }}" -H Content-Type:"application/x-www-form-urlencoded" --data 'staypuft_simple_subnet[name]={{ item.name }}&staypuft_simple_subnet[network_address]={{ item.address }}&staypuft_simple_subnet[dhcp_server]=none&staypuft_simple_subnet[gateway]={{item.gateway}}&staypuft_simple_subnet[ip_range_start]={{item.start}}&staypuft_simple_subnet[ip_range_end]={{item.end}}' https://{{staypuft_deploy_ip}}/staypuft/subnets?deployment_id={{ deployment_id.stdout}}
#  with_items:
#      - { name: "openstack_floating_ips", address: "192.168.123.0/24" , gateway: "192.168.123.1", start: "192.168.123.2", end: "192.168.123.254"}

# some values for this are found in defaults
- name: Network configuration - assign subnet type to subnet
  staypuft_deploy:
    ip={{ staypuft_deploy_ip }}
    deployment_id={{ deployment_id.stdout }}
    staypuft_session="{{ staypuft_session }}"
    step="subnet-typings"
    typings_map="{{typings_map}}"

- name: add services configuration
  uri: url="https://{{ staypuft_deploy_ip }}/deployments/{{ deployment_id.stdout }}/steps/services_configuration"
       method=PUT
       HEADER_Cookie="{{login.set_cookie}}"
       HEADER_X-CSRF-Token="{{ token.stdout }}"
       HEADER_Content-Type="application/json"
       body='{"staypuft_deployment":{"neutron":{"network_segmentation":"{{ staypuft.deploy.services_configuration.neutron.network_segmentation }}"},"glance":{"driver_backend":"{{ staypuft.deploy.services_configuration.glance.driver_backend }}"},"cinder":{"backend_ceph":"{{ staypuft.deploy.services_configuration.cinder.backend_ceph }}"}}}'
       follow_redirects=safe
       status_code=302

- name: find hostgroup_id groups
  uri: url="https://{{ staypuft_deploy_ip }}/deployments/{{ deployment_id.stdout }}#overview"
       method=GET
       HEADER_Cookie="{{login.set_cookie}}"
       HEADER_X-CSRF-Token="{{ token.stdout }}"
       return_content=yes
       follow_redirects=safe
  register: controller_content

- name: return hostgroup_id numbers
  shell: >
    sed -n 's/&lt;input id=&#34;hostgroup_id&#34; name=&#34;hostgroup_id&#34; type=&#34;hidden&#34; value=&#34;\(.*\)&#34; \/&gt;/\1/p' <<<"{{ controller_content.content|escape|truncate(96210) }}"
  register: hostgroup_ids

- name: associate discovered_hosts to hostgroups
  staypuft_deploy:
    ip={{ staypuft_deploy_ip }}
    deployment_id={{ deployment_id.stdout }}
    staypuft_session="{{ staypuft_session }}"
    step="associate-discovered-hosts"
    associate_hosts_map="{{ staypuft.deploy.hostgroup_association }}"

# some values for this are found in defaults
- name: Network configuration - associate subnet to host nic
  staypuft_deploy:
    ip={{ staypuft_deploy_ip }}
    deployment_id={{ deployment_id.stdout }}
    staypuft_session="{{ staypuft_session }}"
    step="interface-assignments"
    interface_assignments_map="{{ interface_assignments_map }}"

- name: get deployment configuration file to import
  template: src={{ staypuft.deploy.deployment_config }}.j2 dest=/tmp/{{ staypuft.deploy.deployment_config }}

- name: import deployment config file
  shell: >
    curl -k -X POST -b "{{login.set_cookie}}" -H X-CSRF-Token:"{{ token.stdout }}" --form "deployment_config_file=@/tmp/{{ staypuft.deploy.deployment_config }}" https://{{ staypuft_deploy_ip }}/deployments/{{ deployment_id.stdout }}/import_config -vvv

- name: deploy
  uri: url="https://{{ staypuft_deploy_ip }}/deployments/{{ deployment_id.stdout }}/deploy"
       method=POST
       HEADER_Cookie="{{login.set_cookie}}"
       HEADER_X-CSRF-Token="{{ token.stdout }}"
       follow_redirects=safe
       status_code=302

- name: check that the hosts have been deployed
  shell: |
      curl -v -k -D /tmp/staypuft-checkend-headers -X POST https://{{ staypuft_deploy_ip}}/users/login -d "login[login]={{ staypuft.deploy.login.username }}&login[password]={{ staypuft.deploy.login.password }}"
      COOKIE=$(grep Set-Cookie /tmp/staypuft-checkend-headers | awk -F": " '{print $2}')
      curl -v -k -X GET -H Cookie:"$COOKIE" https://{{ staypuft_deploy_ip }}/deployments/{{ deployment_id.stdout }} | grep -E -- ">Deployed<"
  register: deploy_end
  retries: 36
  delay: 300
  until: deploy_end.rc==0

- fail: "deploy failed"
  when: deploy_end.rc != 0
