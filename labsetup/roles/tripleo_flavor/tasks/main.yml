---

#- name: flavor delete all
#  become: yes
#  become_user: stack
#  shell: ". ~/stackrc && openstack flavor list -f csv --quote none -c ID | while read id; do openstack flavor delete ${id}; done"

- name: flavor list
  become: yes
  become_user: stack
  shell: . ~/stackrc && openstack flavor list -f value -c ID
  always_run: yes
  changed_when: false
  register: current_flavors
- debug: var=current_flavors.stdout_lines

- name: flavor delete
  become: yes
  become_user: stack
  shell: . ~/stackrc && openstack flavor delete {{ item }}
  with_items:
    - "{{ current_flavors.stdout_lines }}"

- name: flavor create 
  become: yes
  become_user: stack
  shell: . ~/stackrc && openstack flavor create --id auto --ram {{ item.ram }} --swap {{ item.swap }} --disk {{ item.disk }} --vcpus {{ item.vcpus }} {{ item.name }}
  with_items:
    - "{{ tripleo_flavors }}"

- name: flavor set
  become: yes
  become_user: stack
  shell: . ~/stackrc && openstack flavor set --property "cpu_arch"="x86_64" --property "capabilities:boot_option"="local" --property "capabilities:profile"={{ item.name }} {{ item.name }}
  with_items: "{{ tripleo_flavors }}"

#- name: flavor confirm
#  become: yes
#  become_user: stack
#  shell: . ~/stackrc && openstack flavor list -f value -c ID
#  always_run: yes
#  changed_when: false
#  register: new_flavor
#
#- name: flavor show
#  become: yes
#  become_user: stack
#  shell: . ~/stackrc && openstack flavor show {{ item }} | grep properties
#  always_run: yes
#  changed_when: false
#  with_items: "{{ new_flavor.stdout_lines }}"
#  register: result
#- debug: msg="{{ item.stdout }}"
#  with_items: "{{ result.results }}"

#- name: flavor list
#  become: yes
#  become_user: stack
#  shell: . ~/stackrc && openstack flavor list -f value -c ID
#  always_run: yes
#  changed_when: false
#  register: new_flavors
#
#- name: flavor confirm
#  become: yes
#  become_user: stack
#  shell: . ~/stackrc && openstack flavor show {{ item }} | grep properties
#  always_run: yes
#  changed_when: false
#  with_items: "{{ new_flavors.stdout_lines }}"
#  register: result
#- debug: var={{ item.stdout_lines }}
#  with_items: "{{ result.results }}"
