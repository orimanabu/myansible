resource_registry:
  # Network Interface templates to use (these files must exist)
  OS::TripleO::BlockStorage::Net::SoftwareConfig:  /home/stack/nic-configs/cinder-storage.yaml
  OS::TripleO::Compute::Net::SoftwareConfig:       /home/stack/nic-configs/compute.yaml
  OS::TripleO::Controller::Net::SoftwareConfig:    /home/stack/nic-configs/controller.yaml
#  OS::TripleO::ObjectStorage::Net::SoftwareConfig: /home/stack/nic-configs/swift-storage.yaml
#  OS::TripleO::CephStorage::Net::SoftwareConfig:   /home/stack/nic-configs/ceph-storage.yaml

  # This section is usually not modified, if in doubt stick to the defaults
  # TripleO overcloud networks 
  OS::TripleO::Network::External:    /home/stack/my_templates/network/external.yaml
  OS::TripleO::Network::InternalApi: /home/stack/my_templates/network/internal_api.yaml
#  OS::TripleO::Network::StorageMgmt: /home/stack/my_templates/network/storage_mgmt.yaml
  OS::TripleO::Network::StorageMgmt: /home/stack/my_templates/network/noop.yaml
#  OS::TripleO::Network::StorageMgmt: /home/stack/my_templates/network/storage.yaml
  OS::TripleO::Network::Storage:     /home/stack/my_templates/network/storage.yaml
  OS::TripleO::Network::Tenant:      /home/stack/my_templates/network/tenant.yaml

  # Port assignments for the controller role
  OS::TripleO::Controller::Ports::ExternalPort:    /home/stack/my_templates/network/ports/external.yaml
  OS::TripleO::Controller::Ports::InternalApiPort: /home/stack/my_templates/network/ports/internal_api.yaml
  OS::TripleO::Controller::Ports::StoragePort:     /home/stack/my_templates/network/ports/storage.yaml
#  OS::TripleO::Controller::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/storage_mgmt.yaml
  OS::TripleO::Controller::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/noop.yaml
#  OS::TripleO::Controller::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/storage.yaml
  OS::TripleO::Controller::Ports::TenantPort:      /home/stack/my_templates/network/ports/tenant.yaml

  # Port assignment for the Redis VIP on isolated network
  OS::TripleO::Controller::Ports::RedisVipPort:    /home/stack/my_templates/network/ports/vip.yaml 

  # Port assignments for the compute role
  OS::TripleO::Compute::Ports::InternalApiPort: /home/stack/my_templates/network/ports/internal_api.yaml
  OS::TripleO::Compute::Ports::StoragePort:     /home/stack/my_templates/network/ports/storage.yaml
  OS::TripleO::Compute::Ports::TenantPort:      /home/stack/my_templates/network/ports/tenant.yaml

  # Port assignments for the ceph storage role
  OS::TripleO::CephStorage::Ports::StoragePort:     /home/stack/my_templates/network/ports/storage.yaml
#  OS::TripleO::CephStorage::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/storage_mgmt.yaml
  OS::TripleO::CephStorage::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/noop.yaml
#  OS::TripleO::CephStorage::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/storage.yaml

  # Port assignments for the swift storage role
  OS::TripleO::SwiftStorage::Ports::InternalApiPort: /home/stack/my_templates/network/ports/internal_api.yaml
  OS::TripleO::SwiftStorage::Ports::StoragePort:     /home/stack/my_templates/network/ports/storage.yaml
#  OS::TripleO::SwiftStorage::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/storage_mgmt.yaml
  OS::TripleO::SwiftStorage::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/noop.yaml
#  OS::TripleO::SwiftStorage::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/storage.yaml

  # Port assignments for the block storage role
  OS::TripleO::BlockStorage::Ports::InternalApiPort: /home/stack/my_templates/network/ports/internal_api.yaml
  OS::TripleO::BlockStorage::Ports::StoragePort:     /home/stack/my_templates/network/ports/storage.yaml
#  OS::TripleO::BlockStorage::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/storage_mgmt.yaml
  OS::TripleO::BlockStorage::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/noop.yaml
#  OS::TripleO::BlockStorage::Ports::StorageMgmtPort: /home/stack/my_templates/network/ports/storage.yaml

parameter_defaults:
  # This section is where deployment-specific configuration is done
  # Customize the IP subnets to match the local environment
  # Customize the IP ranges on each network to use for static IPs and VIPs
  InternalApiNetCidr: 10.0.1.0/24
  InternalApiAllocationPools: [{'start': '10.0.1.50', 'end': '10.0.1.99'}]

  StorageNetCidr: 10.0.0.0/24
  StorageAllocationPools: [{'start': '10.0.0.50', 'end': '10.0.0.99'}]

  StorageMgmtNetCidr: 10.0.0.0/24
  StorageMgmtAllocationPools: [{'start': '10.0.0.50', 'end': '10.0.0.99'}]

  TenantNetCidr: 10.0.2.0/24
  TenantAllocationPools: [{'start': '10.0.2.50', 'end': '10.0.2.99'}]

  ExternalNetCidr: 172.16.99.0/24
  # Leave room if the external network will also be used for floating IPs
  ExternalAllocationPools: [{'start': '172.16.99.50', 'end': '172.16.99.99'}]
  # Gateway router for the external network
  ExternalInterfaceDefaultRoute: 172.16.99.254

#  # Customize the VLAN IDs to match the local environment
#  InternalApiNetworkVlanID: 10
#  StorageNetworkVlanID: 20
#  StorageMgmtNetworkVlanID: 30
#  TenantNetworkVlanID: 40
#  ExternalNetworkVlanID: 50
#  # Set to empty string to enable multiple external networks or VLANs
#  NeutronExternalNetworkBridge: "''"
#  # Customize bonding options
#  BondInterfaceOvsOptions:
#      "bond_mode=balance-tcp lacp=active other-config:lacp-fallback-ab=true"

  ServiceNetMap: 
#    NeutronTenantNetwork: tenant 
#    CeilometerApiNetwork: internal_api 
#    MongoDbNetwork: internal_api 
#    CinderApiNetwork: internal_api 
#    CinderIscsiNetwork: storage 
#    GlanceApiNetwork: storage 
#    GlanceRegistryNetwork: internal_api 
#    KeystoneAdminApiNetwork: internal_api 
#    KeystonePublicApiNetwork: internal_api 
#    NeutronApiNetwork: internal_api 
#    HeatApiNetwork: internal_api 
#    NovaApiNetwork: internal_api 
#    NovaMetadataNetwork: internal_api 
#    NovaVncProxyNetwork: internal_api 
#    SwiftMgmtNetwork: storage_mgmt 
    SwiftMgmtNetwork: storage
#    SwiftProxyNetwork: storage 
#    HorizonNetwork: internal_api 
#    MemcachedNetwork: internal_api 
#    RabbitMqNetwork: internal_api 
#    RedisNetwork: internal_api 
#    MysqlNetwork: internal_api 
#    CephClusterNetwork: storage_mgmt 
    CephClusterNetwork: storage
#    CephPublicNetwork: storage 
#    ControllerHostnameResolveNetwork: internal_api 
#    ComputeHostnameResolveNetwork: internal_api 
#    BlockStorageHostnameResolveNetwork: internal_api 
#    ObjectStorageHostnameResolveNetwork: internal_api 
#    CephStorageHostnameResolveNetwork: storage 
